<?php

/**
 * This is the model base class for the table "album".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Album".
 *
 * Columns in table "album" available as properties of the model,
 * followed by relations of table "album" available as properties of the model.
 *
 * @property integer $album_id
 * @property integer $user_id
 * @property integer $wedding_id
 * @property integer $album_category_id
 * @property string $created_at
 * @property string $updated_at
 * @property string $status
 * @property integer $position
 * @property string $is_delete
 *
 * @property AlbumCategory $albumCategory
 * @property UserDetail $user
 * @property Wedding $wedding
 * @property AlbumPhotoGallery[] $albumPhotoGalleries
 * @property Comment[] $comments
 */
abstract class BaseAlbum extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'album';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Album|Albums', $n);
	}

	public static function representingColumn() {
		return 'created_at';
	}

	public function rules() {
		return array(
			array('user_id, wedding_id, album_category_id, created_at, position', 'required'),
			array('user_id, wedding_id, album_category_id, position', 'numerical', 'integerOnly'=>true),
			array('status, is_delete', 'length', 'max'=>1),
			array('updated_at', 'safe'),
			array('updated_at, status, is_delete', 'default', 'setOnEmpty' => true, 'value' => null),
			array('album_id, user_id, wedding_id, album_category_id, created_at, updated_at, status, position, is_delete', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'albumCategory' => array(self::BELONGS_TO, 'AlbumCategory', 'album_category_id'),
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
			'wedding' => array(self::BELONGS_TO, 'Wedding', 'wedding_id'),
			'albumPhotoGalleries' => array(self::HAS_MANY, 'AlbumPhotoGallery', 'album_id'),
			'comments' => array(self::HAS_MANY, 'Comment', 'album_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'album_id' => Yii::t('app', 'Album Id'),
			'user_id' => null,
			'wedding_id' => null,
			'album_category_id' => null,
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'status' => Yii::t('app', 'Status'),
			'position' => Yii::t('app', 'Position'),
			'is_delete' => Yii::t('app', 'Is Delete'),
			'albumCategory' => Yii::t('app', 'Album Category'),
			'user' => Yii::t('app', 'User Name'),
			'wedding' => null,
			'albumPhotoGalleries' => null,
			'comments' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('album_id', $this->album_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('wedding_id', $this->wedding_id);
		$criteria->compare('album_category_id', $this->album_category_id);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('position', $this->position);
		$criteria->compare('is_delete', $this->is_delete, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}