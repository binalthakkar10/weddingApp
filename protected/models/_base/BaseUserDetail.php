<?php

/**
 * This is the model base class for the table "user_detail".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserDetail".
 *
 * Columns in table "user_detail" available as properties of the model,
 * followed by relations of table "user_detail" available as properties of the model.
 *
 * @property integer $user_id
 * @property integer $cityID
 * @property integer $stateID
 * @property integer $countryID
 * @property string $auth_id
 * @property string $auth_provider
 * @property string $user_type
 * @property string $fullname
 * @property string $username
 * @property string $password
 * @property string $email
 * @property string $image
 * @property string $phone
 * @property string $mobile
 * @property string $address
 * @property string $address1
 * @property integer $device_type
 * @property string $device_token
 * @property string $created_date
 * @property string $updated_date
 * @property string $status
 * @property string $verification_key
 * @property string $is_verify
 *
 * @property Album[] $albums
 * @property BookletMgmt[] $bookletMgmts
 * @property Comment[] $comments
 * @property Event[] $events
 * @property Feedback[] $feedbacks
 * @property InappPurchase[] $inappPurchases
 * @property InviteFriend[] $inviteFriends
 * @property Like[] $likes
 * @property Order[] $orders
 * @property Payment[] $payments
 * @property PushNotification[] $pushNotifications
 * @property Wedding[] $weddings
 */
abstract class BaseUserDetail extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_detail';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserDetail|UserDetails', $n);
	}

	public static function representingColumn() {
		return 'auth_id';
	}

	public function rules() {
		return array(
			array('cityID, stateID, countryID, auth_id, auth_provider, fullname, username, password, email, image, phone, mobile, address, address1, device_token, created_date, verification_key', 'required'),
			array('cityID, stateID, countryID, device_type', 'numerical', 'integerOnly'=>true),
			array('auth_id, auth_provider, fullname, username, password, phone, mobile', 'length', 'max'=>50),
			array('user_type', 'length', 'max'=>5),
			array('email', 'length', 'max'=>100),
			array('image', 'length', 'max'=>255),
			array('device_token', 'length', 'max'=>500),
			array('status, is_verify', 'length', 'max'=>1),
			array('updated_date', 'safe'),
			array('user_type, device_type, updated_date, status, is_verify', 'default', 'setOnEmpty' => true, 'value' => null),
			array('user_id, cityID, stateID, countryID, auth_id, auth_provider, user_type, fullname, username, password, email, image, phone, mobile, address, address1, device_type, device_token, created_date, updated_date, status, verification_key, is_verify', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'albums' => array(self::HAS_MANY, 'Album', 'user_id'),
			'bookletMgmts' => array(self::HAS_MANY, 'BookletMgmt', 'user_id'),
			'comments' => array(self::HAS_MANY, 'Comment', 'user_id'),
			'events' => array(self::HAS_MANY, 'Event', 'user_id'),
			'feedbacks' => array(self::HAS_MANY, 'Feedback', 'user_id'),
			'inappPurchases' => array(self::HAS_MANY, 'InappPurchase', 'user_id'),
			'inviteFriends' => array(self::HAS_MANY, 'InviteFriend', 'user_id'),
			'likes' => array(self::HAS_MANY, 'Like', 'user_id'),
			'orders' => array(self::HAS_MANY, 'Order', 'user_id'),
			'payments' => array(self::HAS_MANY, 'Payment', 'user_id'),
			'pushNotifications' => array(self::HAS_MANY, 'PushNotification', 'user_id'),
			'weddings' => array(self::HAS_MANY, 'Wedding', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'user_id' => Yii::t('app', 'User'),
			'cityID' => Yii::t('app', 'City'),
			'stateID' => Yii::t('app', 'State'),
			'countryID' => Yii::t('app', 'Country'),
			'auth_id' => Yii::t('app', 'Auth'),
			'auth_provider' => Yii::t('app', 'Auth Provider'),
			'user_type' => Yii::t('app', 'User Type'),
			'fullname' => Yii::t('app', 'Fullname'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'email' => Yii::t('app', 'Email'),
			'image' => Yii::t('app', 'Image'),
			'phone' => Yii::t('app', 'Phone'),
			'mobile' => Yii::t('app', 'Mobile'),
			'address' => Yii::t('app', 'Address'),
			'address1' => Yii::t('app', 'Address1'),
			'device_type' => Yii::t('app', 'Device Type'),
			'device_token' => Yii::t('app', 'Device Token'),
			'created_date' => Yii::t('app', 'Created Date'),
			'updated_date' => Yii::t('app', 'Updated Date'),
			'status' => Yii::t('app', 'Status'),
			'verification_key' => Yii::t('app', 'Verification Key'),
			'is_verify' => Yii::t('app', 'Is Verify'),
			'albums' => null,
			'bookletMgmts' => null,
			'comments' => null,
			'events' => null,
			'feedbacks' => null,
			'inappPurchases' => null,
			'inviteFriends' => null,
			'likes' => null,
			'orders' => null,
			'payments' => null,
			'pushNotifications' => null,
			'weddings' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('cityID', $this->cityID);
		$criteria->compare('stateID', $this->stateID);
		$criteria->compare('countryID', $this->countryID);
		$criteria->compare('auth_id', $this->auth_id, true);
		$criteria->compare('auth_provider', $this->auth_provider, true);
		$criteria->compare('user_type', $this->user_type, true);
		$criteria->compare('fullname', $this->fullname, true);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('address1', $this->address1, true);
		$criteria->compare('device_type', $this->device_type);
		$criteria->compare('device_token', $this->device_token, true);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('updated_date', $this->updated_date, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('verification_key', $this->verification_key, true);
		$criteria->compare('is_verify', $this->is_verify, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}