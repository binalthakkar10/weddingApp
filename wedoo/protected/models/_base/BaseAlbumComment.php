<?php

/**
 * This is the model base class for the table "album_comment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AlbumComment".
 *
 * Columns in table "album_comment" available as properties of the model,
 * followed by relations of table "album_comment" available as properties of the model.
 *
 * @property integer $album_comment_id
 * @property integer $album_photo_id
 * @property integer $user_id
 * @property string $comment
 * @property string $created_at
 *
 * @property UserDetail $user
 * @property AlbumPhotoGallery $albumPhoto
 */
abstract class BaseAlbumComment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'album_comment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AlbumComment|AlbumComments', $n);
	}

	public static function representingColumn() {
		return 'comment';
	}

	public function rules() {
		return array(
			array('album_photo_id, user_id, comment, created_at', 'required'),
			array('album_photo_id, user_id', 'numerical', 'integerOnly'=>true),
			array('comment', 'length', 'max'=>200),
			array('album_comment_id, album_photo_id, user_id, comment, created_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
			'albumPhoto' => array(self::BELONGS_TO, 'AlbumPhotoGallery', 'album_photo_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'album_comment_id' => Yii::t('app', 'Album Comment'),
			'album_photo_id' => null,
			'user_id' => null,
			'comment' => Yii::t('app', 'Comment'),
			'created_at' => Yii::t('app', 'Created At'),
			'user' => null,
			'albumPhoto' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('album_comment_id', $this->album_comment_id);
		$criteria->compare('album_photo_id', $this->album_photo_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('created_at', $this->created_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}