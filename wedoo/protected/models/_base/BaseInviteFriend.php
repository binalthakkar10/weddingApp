<?php

/**
 * This is the model base class for the table "invite_friend".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InviteFriend".
 *
 * Columns in table "invite_friend" available as properties of the model,
 * followed by relations of table "invite_friend" available as properties of the model.
 *
 * @property integer $invite_id
 * @property integer $user_id
 * @property string $invite_type
 * @property string $invite_email
 * @property string $register_email_flag
 * @property string $make_admin
 * @property string $remove_user
 * @property string $created_at
 * @property string $updated_at
 * @property string $status
 * @property string $field1
 * @property string $field2
 *
 * @property UserDetail $user
 */
abstract class BaseInviteFriend extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'invite_friend';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InviteFriend|InviteFriends', $n);
	}

	public static function representingColumn() {
		return 'invite_type';
	}

	public function rules() {
		return array(
			array('user_id, invite_type, invite_email, created_at, field1, field2', 'required'),
			array('user_id', 'numerical', 'integerOnly'=>true),
			array('invite_type, invite_email', 'length', 'max'=>50),
			array('register_email_flag, make_admin, remove_user', 'length', 'max'=>3),
			array('status', 'length', 'max'=>1),
			array('field1, field2', 'length', 'max'=>100),
			array('updated_at', 'safe'),
			array('register_email_flag, make_admin, remove_user, updated_at, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('invite_id, user_id, invite_type, invite_email, register_email_flag, make_admin, remove_user, created_at, updated_at, status, field1, field2', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'invite_id' => Yii::t('app', 'Invite'),
			'user_id' => null,
			'invite_type' => Yii::t('app', 'Invite Type'),
			'invite_email' => Yii::t('app', 'Invite Email'),
			'register_email_flag' => Yii::t('app', 'Register Email Flag'),
			'make_admin' => Yii::t('app', 'Make Admin'),
			'remove_user' => Yii::t('app', 'Remove User'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'status' => Yii::t('app', 'Status'),
			'field1' => Yii::t('app', 'Field1'),
			'field2' => Yii::t('app', 'Field2'),
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('invite_id', $this->invite_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('invite_type', $this->invite_type, true);
		$criteria->compare('invite_email', $this->invite_email, true);
		$criteria->compare('register_email_flag', $this->register_email_flag, true);
		$criteria->compare('make_admin', $this->make_admin, true);
		$criteria->compare('remove_user', $this->remove_user, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('field1', $this->field1, true);
		$criteria->compare('field2', $this->field2, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}