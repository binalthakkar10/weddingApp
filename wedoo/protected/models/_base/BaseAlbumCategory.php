<?php

/**
 * This is the model base class for the table "album_category".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AlbumCategory".
 *
 * Columns in table "album_category" available as properties of the model,
 * followed by relations of table "album_category" available as properties of the model.
 *
 * @property integer $album_cate_id
 * @property integer $user_id
 * @property string $album_cate_name
 * @property string $album_cover_image
 * @property string $created_at
 * @property string $updated_at
 * @property string $status
 * @property string $category_type
 * @property string $position
 *
 * @property Album[] $albums
 */
abstract class BaseAlbumCategory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'album_category';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AlbumCategory|AlbumCategories', $n);
	}

	public static function representingColumn() {
		return 'album_cate_name';
	}

	public function rules() {
		return array(
			array('album_cate_name, album_cover_image, created_at, category_type, position', 'required'),
			array('user_id', 'numerical', 'integerOnly'=>true),
			array('album_cate_name, category_type, position', 'length', 'max'=>100),
			array('album_cover_image', 'length', 'max'=>50),
			array('status', 'length', 'max'=>1),
			array('updated_at', 'safe'),
			array('user_id, updated_at, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('album_cate_id, user_id, album_cate_name, album_cover_image, created_at, updated_at, status, category_type, position', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'albums' => array(self::HAS_MANY, 'Album', 'album_category_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'album_cate_id' => Yii::t('app', 'Album Cate'),
			'user_id' => Yii::t('app', 'User'),
			'album_cate_name' => Yii::t('app', 'Album Cate Name'),
			'album_cover_image' => Yii::t('app', 'Album Cover Image'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
		//	'AlbumCategory'=>Yii::t('app', 'Album Category'),
			'status' => Yii::t('app', 'Status'),
			'category_type' => Yii::t('app', 'Category Type'),
			'position' => Yii::t('app', 'Position'),
			'albums' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('album_cate_id', $this->album_cate_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('album_cate_name', $this->album_cate_name, true);
		$criteria->compare('album_cover_image', $this->album_cover_image, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('category_type', $this->category_type, true);
		$criteria->compare('position', $this->position, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}